[General]
network = FatTree
result-dir = exp1-1-seed1
record-eventlog=false
debug-on-errors = false
**.module-eventlog-recording = true
cmdenv-express-mode = false
cmdenv-log-prefix = %t | %m |
cmdenv-performance-display = true
#*.visualizer.displayRoutingTables = true
**.statistic-recording=true

#FatTreeNdp.Pod[2].racks[1].servers[1].ndp.cmdenv-log-level = trace
FatTree.Pod[2].racks[3].servers[3].scdp.conn-932.cmdenv-log-level = trace
**.cmdenv-log-level = off
cmdenv-redirect-output = false
cmdenv-output-file = connLog.txt
#FatTreeNdp.Pod[3].racks[1].servers[0].app[2].cmdenv-log-level = info

#FatTreeNdp.Pod[2].racks[3].servers[3].ndp.conn-137.cmdenv-log-level = info
#FatTreeNdp.Pod[2].racks[3].servers[3].app[0].cmdenv-log-level = info

**.app[*].packetReceived:vector(packetBytes).vector-recording = true
**.app[*].packetReceived:sum(packetBytes).scalar-recording = true
**.app[*].packetReceived:count.scalar-recording = true
**.app[*].mohThroughput:last.scalar-recording = true
**.app[*].instThroughput:mean.scalar-recording = true
**.app[*].instThroughput:vector.vector-recording = true

**.app[*].fctRecordv3:last.scalar-recording = true
**.app[*].numRcvTrimmedHeaderSig:last.scalar-recording = true
**.CoreRouter[*].**.numTrimmedPkt:last.scalar-recording = true
#**.CoreRouter[*].**.dropPk:count.scalar-recording = true
**.CoreRouter[*].**.packetReceived:count.scalar-recording = true
**.aggRouters[*].**.numTrimmedPkt:last.scalar-recording = true
#**.aggRouters[*].**.dropPk:count.scalar-recording = true
**.aggRouters[*].**.packetReceived:count.scalar-recording = true
**.edgeSwitch.**.numTrimmedPkt:last.scalar-recording = true
#**.edgeSwitch.**.dropPk:count.scalar-recording = true
**.edgeSwitch.**.packetReceived:count.scalar-recording = true
#**.servers[*].**.dropPk:count.scalar-recording = true
**.servers[*].**.packetReceived:count.scalar-recording = true
**.servers[*].**.packetReceived:sum(packetBytes).scalar-recording = true
#**.servers[*].**.dropPk:sum(packetBytes).scalar-recording = true
FatTree.centralScheduler.*.scalar-recording = true
FatTree.centralScheduler.*.vector-recording = true
# The ptatern matcher in INI file always applies the first pattern matching in the file starting from the top. 
# This means that the order of patterns are important.  First enable the recording on all vectors you need and then disable the rest with 
**.scalar-recording=false
**.vector-recording=false
**.bin-recording=false
# k = 4 (16 servers),  k = 6 (54 servers),  k = 8 (128 servers),  k = 10 (250 servers),  
# k = 12 (432 servers),  k = 14 (686 servers),  k = 16 (1024 servers)
**.k = ${FatTreeSize=4..16 step 2}
**.kValue = ${FatTreeSize}
**.trafficMatrixType = ${"randTM"}  #randTM permTM
**.arrivalRate = 2000
**.shuffle = true
**.flowSize = 500   # symbols (each symbol 1500B)
**.numShortFlows = ${numShortFlows=0..999 step 1, 1000..9999 step 100, 10000, 12000, 20000,50000,100000}
**.longFlowSize = 1000  # 2000MiB  not used
**.percentLongFlowNodes = 0.7
**.initialWindow = 2
**.IW = 2 # same value as the one in the above line,
# it is used by the central Node to do scalarRecord in config.csv as we just enable scalar records in this module not for RaptroQ module. 

**.switchQueueLength = 8  # FYIIII you need to change the value below as well
# same value as queue.frameCapacity below. This is  used only to store this value in the config.csv (as IW)

**.isWebSearchWorkLoad =    false 
**.perPacketEcmp = true
**.perFlowEcmp = false
**.seedValue = 1111
#Incast parameters
#**.numIncastSenders =${1..70 step 3} 

#multicasting parameters  & ultiSourcing parameters
**.oneToOne =    true 
**.randomGroup= true

**.servers*.ppp[*].ppp.queue.typename = "PacketQueue"
**.servers*.ppp[*].ppp.queue.packetCapacity = -1
# NIC configuration - queue (see DropTailQueue.ned @statistic[dropPk] .... )

**.ppp[*].ppp.queue.typename = "RaqsacSwitchQueue" # in routers DropTailQueue NDPQueue
**.ppp[*].ppp.queue.packetCapacity = ${8..8 step 1} #${30..30 step 1}  # in routers

**.raqsac.typename = "Raqsac"
**.raqsac.raqsacAlgorithmClass = "DumbRaqsac"
**.server*.numApps =1
**.server*.app[0].typename = "RaqsacBasicClientApp"
**.server*.app[0].connectAddress = "FatTree.Pod[*].racks[*].servers[*]"
**.server*.app[0].connectPort = 80
**.server*.app[0].startTime =0s
**.server*.app[0].numSymbolsToSend = 70
**.channel.throughput.result-recording-modes=all




