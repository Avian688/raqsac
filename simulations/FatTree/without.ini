[General]
network = FatTree
result-dir = without
record-eventlog=false
debug-on-errors = false
**.cmdenv-log-level = off
cmdenv-express-mode = true
cmdenv-performance-display = true
#*.visualizer.displayRoutingTables = true
**.statistic-recording=true
**.raptorQApp[*].rcvdPk:vector(packetBytes).vector-recording = true
**.raptorQApp[*].rcvdPk:sum(packetBytes).scalar-recording = true
**.raptorQApp[*].rcvdPk:count.scalar-recording = true
**.raptorQApp[*].mohThroughputRQ:mean.scalar-recording = true
**.raptorQApp[*].fctRecordv2:last.scalar-recording = true
**.raptorQApp[*].numRcvTrimmedHeaderSig:last.scalar-recording = true
**.CoreRouter[*].**.numTrimmedPkt:last.scalar-recording = true
**.CoreRouter[*].**.dropPk:count.scalar-recording = true
**.CoreRouter[*].**.rcvdPk:count.scalar-recording = true
**.aggRouters[*].**.numTrimmedPkt:last.scalar-recording = true
**.aggRouters[*].**.dropPk:count.scalar-recording = true
**.aggRouters[*].**.rcvdPk:count.scalar-recording = true
**.edgeSwitch.**.numTrimmedPkt:last.scalar-recording = true
**.edgeSwitch.**.dropPk:count.scalar-recording = true
**.edgeSwitch.**.rcvdPk:count.scalar-recording = true
**.servers[*].**.dropPk:count.scalar-recording = true
**.servers[*].**.rcvdPk:count.scalar-recording = true
**.servers[*].**.rcvdPk:sum(packetBytes).scalar-recording = true
**.servers[*].**.dropPk:sum(packetBytes).scalar-recording = true
FatTree.centralScheduler.*.scalar-recording = true
FatTree.centralScheduler.*.vector-recording = true
# The ptatern matcher in INI file always applies the first pattern matching in the file starting from the top. 
# This means that the order of patterns are important.  First enable the recording on all vectors you need and then disable the rest with 
**.scalar-recording=false
**.vector-recording=false
**.bin-recording=false
# k = 4 (16 servers),  k = 6 (54 servers),  k = 8 (128 servers),  k = 10 (250 servers),  
# k = 12 (432 servers),  k = 14 (686 servers),  k = 16 (1024 servers)
**.k = ${FatTreeSize=4..16 step 2}
**.kValue = ${FatTreeSize}
**.trafficMatrixType = ${"randTM"}  #randTM permTM
**.arrivalRate = 1000
**.shuffle = true
**.flowSize = 500   # symbols (each symbol 1500B)
**.numShortFlows = ${numShortFlows=0..999 step 1, 1000..9999 step 100, 10000, 12000, 20000,50000,100000}
**.longFlowSize = 1  # 2000MiB  not used
**.percentLongFlowNodes =  0.8
**.initialWindow = 12
**.IW = 12 # same value as the one in the above line,
# it is used by the central Node to do scalarRecord in config.csv as we just enable scalar records in this module not for RaptroQ module. 

**.ndpSwitchQueueLength = 30  # FYIIII you need to change the value below as well
# same value as queue.frameCapacity below. This is  used only to store this value in the config.csv (as IW)

**.isWebSearchWorkLoad = true

**.perPacketEcmp = true
**.perFlowEcmp = false
**.seedValue = 600
#Incast parameters
#**.numIncastSenders =${1..70 step 3} 

#multicasting parameters  & ultiSourcing parameters
**.oneToOne =    true 
**.runMulticast = false 
**.runMultiSourcing =  false 
**.numReplica = 3 
**.numRunningMulticastGroups = 100
**.numRunningMultiSourcingGroups = 2000 
**.randomGroup= true

**.servers*.ppp[*].queueType = ""
# NIC configuration - queue (see DropTailQueue.ned @statistic[dropPk] .... )

**.ppp[*].queueType = "NDPQueue" # in routers DropTailQueue NDPQueue  NdpPriorityQueue
**.ppp[*].queue.frameCapacity = ${30..30 step 1}  # in routers










**.raptorQType = "RaptorQ"
**.raptorQApp[*].dataTransferMode = "rqrequests"
**.raptorQ.rqAlgorithmClass = "RQSimpleAlg"
**.raptorQ.advertisedWindow = 4000
**.raptorQ.mss=1000
**.numRaptorQApps =1
**.server*.raptorQApp[0].typename = "RaptorQBasicClientApp"
**.server*.raptorQApp[0].connectAddress = "server*"
**.server*.raptorQApp[0].connectPort = 80
**.server*.raptorQApp[0].startTime =0s
**.server*.raptorQApp[0].idleInterval = 100s
**.server*.raptorQApp[0].numSymbolsToSend = 70
**.server*.raptorQApp[0].requestLength = 10B
**.server*.raptorQApp[0].replyLength = 1000B
**.server*.raptorQApp[0].opcode = 2   # 1 read, 2 write
**.server*.raptorQApp[0].fileId=2017
**.channel.throughput.result-recording-modes=all




